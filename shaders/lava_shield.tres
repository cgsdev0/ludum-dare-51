[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform vec2 player_position;
uniform float radius = 16.0;
uniform bool enabled = false;
uniform mat4 global_transform;

varying vec2 world_position;

void vertex()
{
	world_position = (WORLD_MATRIX * (EXTRA_MATRIX * vec4(VERTEX, 0.0, 1.0))).xy;
	VERTEX.y += sin(VERTEX.x + TIME * 2.0);
}

void fragment() {
	COLOR = texture(TEXTURE, UV);
	if (enabled) {
//		COLOR.g = world_position.x / 260.0;
		float dist = distance(world_position, player_position);
		if (dist < radius) {
			COLOR.a = 0.5 - (radius - dist) / (radius);
		} else {
			float gain = min((dist - radius) / 10.0, 1.0);
			COLOR /= gain;
		}
	}
}"
